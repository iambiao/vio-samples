# Copyright Â© 2019 VMware, Inc. All Rights Reserved.
# SPDX-License-Identifier: BSD-2-Clause

heat_template_version: "2018-08-31"

parameters:
  cluster_name:
    type: string
  nsx_api_manager:
    type: string
  nsx_username:
    type: string
  nsx_password:
    type: string
  pod_network_cidr:
    type: string
  gateway_ip:
    type: string

resources:
  tag_ncp_ports:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: |
            #!/bin/bash

            cat <<EOF >/root/tag_nsx_ports.py
            #!/usr/bin/python
            import json
            import requests
            import os

            URL = "https://$nsx_api_manager/api/v1/logical-ports"
            USERNAME = "$nsx_username"
            PASSWORD = "$nsx_password"
            CLUSTER_NAME = "$cluster_name"
            IP_ADDRESS = os.environ['POD_IP_ADDRESS']
            HOSTNAME = os.environ['HOSTNAME']

            response = requests.get(URL, verify=False, auth=(USERNAME, PASSWORD))

            ports = json.loads(response.text)

            for port in ports['results']:
              for ip in port['address_bindings']:
                if ip['ip_address'] == IP_ADDRESS:
                  print "\nUpdating Port Tags\n"
                  port['tags'].append({'scope': 'ncp/cluster', 'tag': CLUSTER_NAME})
                  port['tags'].append({'scope': 'ncp/node_name', 'tag': HOSTNAME})
                  data = {'tags': port['tags'], 'logical_switch_id': port['logical_switch_id'],
                          'admin_state': port['admin_state'], '_revision': port['_revision'],
                          'attachment': port['attachment'], 'display_name': port['display_name']}
                  port_url = URL + '/' + port['id']
                  t = requests.put(port_url, verify=False, auth=(USERNAME, PASSWORD),
                                   json=data)
                  print t.text
            EOF

            export POD_IP_ADDRESS=$(/sbin/ifconfig br-int | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}')
            export HOSTNAME=$(hostname)
            python /root/tag_nsx_ports.py
            ip route add $pod_cidr via $gateway_ip
          params:
            $nsx_api_manager: { get_param: nsx_api_manager }
            $nsx_username: { get_param: nsx_username }
            $nsx_password: { get_param: nsx_password }
            $cluster_name: { get_param: cluster_name }
            $pod_cidr: { get_param: pod_network_cidr }
            $gateway_ip: { get_param: gateway_ip }

outputs:
  OS::stack_id:
    value: { get_resource: tag_ncp_ports }
