# Copyright Â© 2019 VMware, Inc. All Rights Reserved.
# SPDX-License-Identifier: BSD-2-Clause

heat_template_version: "2018-08-31"

parameters:
  mgmt_network:
    type: string
  mgmt_subnet:
    type: string
  api_network:
    type: string
  api_subnet:
    type: string
  pod_network:
    type: string
  pod_subnet:
    type: string
  k8s_secgroup:
    type: string
  open_secgroup:
    type: string
  availability_zone:
    type: string
  key_name:
    type: string
  name:
    type: string
  init_routine:
    type: string
  image:
    type: string
  minion_flavor:
    type: string
  sriov_provider_net:
    type: string
  sriov_subnet:
    type: string
  sriov_ports_num:
    type: number

conditions:
  sriov_enabled:
    and:
    - not:
        equals:
        - get_param: sriov_provider_net
        - "none"
    - not:
        equals:
        - get_param: sriov_ports_num
        - 0

resources:
  minion_mgmt_port:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      resource_def:
        type: OS::Neutron::Port
        properties:
          network_id: { get_param: mgmt_network }
          security_groups: [ get_param: k8s_secgroup ]
          fixed_ips:
          - subnet_id: { get_param: mgmt_subnet }

  minion_api_port:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      resource_def:
        type: OS::Neutron::Port
        properties:
          network_id: { get_param: api_network }
          security_groups: [ get_param: open_secgroup ]
          fixed_ips:
          - subnet_id: { get_param: api_subnet }

  minion_pod_port:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      resource_def:
        type: OS::Neutron::Port
        properties:
          network_id: { get_param: pod_network }
          security_groups: [ get_param: open_secgroup ]
          fixed_ips:
          - subnet_id: { get_param: pod_subnet }

  minion_sriov_ports:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: sriov_ports_num }
      resource_def:
        type: OS::Neutron::Port
        properties:
          binding:vnic_type: direct
          network_id: { get_param: sriov_provider_net }
          port_security_enabled: false
          fixed_ips:
          - subnet_id: { get_param: sriov_subnet }

  minion_node:
    type: "OS::Nova::Server"
    properties:
      name: { get_param: name }
      networks:
        repeat:
          template:
            port: <%port%>
          for_each:
            <%port%>:
              list_concat:
              - { get_attr: [minion_mgmt_port, refs] }
              - { get_attr: [minion_api_port, refs] }
              - { get_attr: [minion_pod_port, refs] }
              - if: ["sriov_enabled", get_attr: [minion_sriov_ports, refs], null]
      flavor: { get_param: minion_flavor }
      image: { get_param: image }
      availability_zone: { get_param: availability_zone }
      key_name: { get_param: key_name }
      config_drive: true
      user_data_format: RAW
      user_data: { get_param: init_routine }

outputs:
  OS::stack_id:
    value: { get_resource: minion_node }
